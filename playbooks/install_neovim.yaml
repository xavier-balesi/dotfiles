---

- name: "Clone, make and install Neovim"
  hosts: localhost
  connection: local
  vars:
    python_version: 3.10.7
    neovim_pyenv_virtualenv: neovim3
    pyenv_root: ~/.pyenv

  tasks:

  - name: set directories variables
    set_fact:
      install_directory: "{{ ansible_env.HOME }}/Apps/nvim"
      local_bin_directory: "{{ ansible_env.HOME }}/.local/bin"
      config_directory: "{{ ansible_env.HOME }}/.config"
    tags: always

  - name: create Neovim destination dir
    file:
      path: "{{ item }}"
      state: directory
    loop:
      - "{{ install_directory }}"
      - "{{ local_bin_directory }}"
    tags: always

  - name: install package dependencies
    apt:
      pkg:
      - isort
      - black
      - yamllint
    become: true

  - name: create pyenv environment for neovim
    shell: 'pyenv virtualenv {{ python_version }} {{ neovim_pyenv_virtualenv }}'
    args:
      creates: '{{ pyenv_root }}/versions/{{ neovim_pyenv_virtualenv }}'

  # TODO use a specific file
  - name: set NVIM_PYTHON_PATH in bashrc
    lineinfile:
      path: ~/.bashrc
      line: export NVIM_PYTHON_PATH="{{ pyenv_root }}/versions/{{ neovim_pyenv_virtualenv }}/bin/python"
      regexp: '^export NVIM_PYTHON_PATH='

  - name: set EDITOR in bashrc
    lineinfile:
      path: ~/.bashrc
      line: export EDITOR=nvim
      regexp: '^export EDITOR='
    tags: config

  - name: download neovim nightly
    get_url:
      url: https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz
      dest: "{{ install_directory }}"
      checksum: sha256:https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz.sha256sum

  - name: extract neovim archive
    unarchive:
      src: "{{ install_directory }}/nvim-linux64.tar.gz"
      dest: "{{ install_directory }}"

  - name: create neovim symlink
    file:
      src: "{{ install_directory }}/nvim-linux64/bin/nvim"
      dest: "{{ local_bin_directory }}/nvim"
      state: link

  - name: install nvim config
    copy:
      src: "{{ playbook_dir }}/../.config/nvim"
      dest: "{{ config_directory }}"
    tags: config

  - name: create temp directory for NVM install
    tempfile:
      prefix: nvim_nvm_
      state: directory
    register: nvm_install_tmp

  - name: download install script nvm (for coc nvim plugin)
    get_url:
      url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh
      dest: "{{ nvm_install_tmp.path }}/install.sh"
      mode: 0755

  - name: install nvm
    shell:
      executable: /bin/bash
      chdir: "{{ nvm_install_tmp.path }}"
      cmd: ./install.sh

  - name: set node version
    shell:
      executable: /bin/bash
      cmd: "source {{ ansible_env.HOME }}/.nvm/nvm.sh; nvm install 17.6.0"

  - name: install pip dependencies
    pip:
      executable: ~/.pyenv/versions/{{ neovim_pyenv_virtualenv }}/bin/pip3
      name:
      - isort
      - black
      - yamllint
      - ansible-lint
      - neovim
      - tree-sitter
      extra_args: '--upgrade'

  # fixme npm not yet available as it's just in PATH from the previous task
  - name: npm install tree-sitter
    npm:
      name: '{{ item }}'
      global: true
    loop:
    - tree-sitter
    - tree-sitter-cli
    tags:
    - tree-sitter

  # TODO find a way to install TSInstallFromGrammar gotmpl

  - name: npm install tree-sitter-cli
    npm:
      name: tree-sitter-cli
      global: true

  - name: npm install markdownlint
    npm:
      name: '{{ item }}'
      global: true
    tags: markdownlint
    loop:
      - markdownlint
      - markdownlint-cli

  - name: download marksman
    get_url:
      url: https://github.com/artempyanykh/marksman/releases/download/2023-07-25/marksman-linux-x64
      dest: ~/.local/bin/marksman
      mode: 0755
    tags: marksman

  - name: npm install prettier
    npm:
      name: prettier
      global: true
    tags: prettier

  - name: create local font directory
    file:
      path: ~/.local/share/fonts/JetBrainsMono
      state: directory

  - name: download Nerd Fonts
    get_url:
      url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/JetBrainsMono.zip
      dest: ~/.local/share/fonts/JetBrainsMono.zip

  - name: extract Nerd Fonts
    unarchive:
      src: ~/.local/share/fonts/JetBrainsMono.zip
      dest: ~/.local/share/fonts/JetBrainsMono
      creates: ~/.local/share/fonts/JetBrainsMono/readme.md
